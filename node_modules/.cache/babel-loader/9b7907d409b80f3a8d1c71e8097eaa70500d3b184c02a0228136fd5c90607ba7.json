{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\reactt\\\\fproject\\\\src\\\\components\\\\Feedbackstats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackContext from '../context/FeedbackContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Feedbackstats = () => {\n  _s();\n  const {\n    feedback\n  } = useContext(FeedbackContext);\n\n  //  Calculate the Average---->\n  const average = feedback.reduce((acc, cur) => {\n    return acc + cur.rating;\n  }, 0) / feedback.length;\n\n  // average =  average.toFixed(1).replace(/[.,]0$/,'')\n\n  const averages = average.toFixed(1).replace(/[.,]0$/, '');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [feedback.length, \" Reviews\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Average Rating: \", isNaN(averages) ? 0 : averages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Feedbackstats, \"AT5CRtmcyyiGlE8WBEHxrG+enhc=\");\n_c = Feedbackstats;\nFeedbackstats.propTypes = {\n  feedback: PropTypes.array.isRequired\n};\nexport default Feedbackstats;\nvar _c;\n$RefreshReg$(_c, \"Feedbackstats\");","map":{"version":3,"names":["React","useContext","PropTypes","FeedbackContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Feedbackstats","_s","feedback","average","reduce","acc","cur","rating","length","averages","toFixed","replace","children","className","fileName","_jsxFileName","lineNumber","columnNumber","isNaN","_c","propTypes","array","isRequired","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/reactt/fproject/src/components/Feedbackstats.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackContext from '../context/FeedbackContext';\r\n\r\nconst Feedbackstats = () => {\r\n\r\n  const {feedback} = useContext(FeedbackContext)\r\n\r\n//  Calculate the Average---->\r\nconst average = feedback.reduce((acc,cur) => {\r\n    return acc + cur.rating;\r\n},0) / feedback.length\r\n\r\n// average =  average.toFixed(1).replace(/[.,]0$/,'')\r\n\r\n const  averages = average.toFixed(1).replace(/[.,]0$/,'');\r\n\r\n  return (  \r\n    <>\r\n    <div className=\"feedback-stats\">\r\n        <h4>{feedback.length} Reviews</h4>\r\n        <h4>Average Rating: {isNaN(averages) ? 0 : averages}</h4>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nFeedbackstats.propTypes = {\r\n    feedback: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Feedbackstats;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,eAAe,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM;IAACC;EAAQ,CAAC,GAAGT,UAAU,CAACE,eAAe,CAAC;;EAEhD;EACA,MAAMQ,OAAO,GAAGD,QAAQ,CAACE,MAAM,CAAC,CAACC,GAAG,EAACC,GAAG,KAAK;IACzC,OAAOD,GAAG,GAAGC,GAAG,CAACC,MAAM;EAC3B,CAAC,EAAC,CAAC,CAAC,GAAGL,QAAQ,CAACM,MAAM;;EAEtB;;EAEC,MAAOC,QAAQ,GAAGN,OAAO,CAACO,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAC,EAAE,CAAC;EAExD,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACAf,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC3Bf,OAAA;QAAAe,QAAA,GAAKV,QAAQ,CAACM,MAAM,EAAC,UAAQ;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCpB,OAAA;QAAAe,QAAA,GAAI,kBAAgB,EAACM,KAAK,CAACT,QAAQ,CAAC,GAAG,CAAC,GAAGA,QAAQ;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EAAC,gBACJ,CAAC;AAEP,CAAC;AAAAhB,EAAA,CArBKD,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAuBnBA,aAAa,CAACoB,SAAS,GAAG;EACtBlB,QAAQ,EAAER,SAAS,CAAC2B,KAAK,CAACC;AAC9B,CAAC;AAED,eAAetB,aAAa;AAAC,IAAAmB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}