{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\reactt\\\\fproject\\\\src\\\\components\\\\FeedbackLists.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport FeedbackItem from \"./FeedbackItem\";\n// import  PropTypes from 'prop-types';\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport FeedbackContext from \"../context/FeedbackContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackLists = ({\n  handleDelete\n}) => {\n  _s();\n  const {\n    feedback\n  } = useContext(FeedbackContext);\n  if (!feedback || feedback.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"nolists\",\n      children: \"No FeedBack Yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  //  Animation----->\n\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-list\",\n      children: feedback.map(item => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(FeedbackItem, {\n          item: item,\n          handleDelete: handleDelete\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n\n  // without Animation----->\n\n  // return (\n  //   <div className='feedback-list'>\n  //           {feedback.map((item) =>(\n  //        <FeedbackItem key={item.id}\n  //         item={item}\n  //         handleDelete = {handleDelete} />\n  //         ))}\n  //   </div>\n  // );\n};\n\n// FeedbackLists.propTypes = {\n//   feedback : PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       rating: PropTypes.number.isRequired,\n//       text: PropTypes.string.isRequired,\n//     })\n//   )\n// }\n_s(FeedbackLists, \"RNPzS9Jfq5OTQN+7+1vdg6m3Kwc=\");\n_c = FeedbackLists;\nexport default FeedbackLists;\nvar _c;\n$RefreshReg$(_c, \"FeedbackLists\");","map":{"version":3,"names":["React","useContext","FeedbackItem","motion","AnimatePresence","FeedbackContext","jsxDEV","_jsxDEV","FeedbackLists","handleDelete","_s","feedback","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","div","initial","opacity","animate","exit","id","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/reactt/fproject/src/components/FeedbackLists.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport FeedbackItem from \"./FeedbackItem\";\r\n// import  PropTypes from 'prop-types';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport FeedbackContext from \"../context/FeedbackContext\";\r\n\r\nconst FeedbackLists = ({ handleDelete }) => {\r\n  \r\n  const { feedback } = useContext(FeedbackContext);\r\n\r\n  if (!feedback || feedback.length === 0) {\r\n    return <p className=\"nolists\">No FeedBack Yet</p>;\r\n  }\r\n  \r\n\r\n  //  Animation----->\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <div className=\"feedback-list\">\r\n        {feedback.map((item) => (\r\n          <motion.div\r\n            key={item.id}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n          >\r\n            <FeedbackItem\r\n              key={item.id}\r\n              item={item}\r\n              handleDelete={handleDelete}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n    </AnimatePresence>\r\n  );\r\n\r\n  // without Animation----->\r\n\r\n  // return (\r\n  //   <div className='feedback-list'>\r\n  //           {feedback.map((item) =>(\r\n  //        <FeedbackItem key={item.id}\r\n  //         item={item}\r\n  //         handleDelete = {handleDelete} />\r\n  //         ))}\r\n  //   </div>\r\n  // );\r\n};\r\n\r\n// FeedbackLists.propTypes = {\r\n//   feedback : PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number.isRequired,\r\n//       rating: PropTypes.number.isRequired,\r\n//       text: PropTypes.string.isRequired,\r\n//     })\r\n//   )\r\n// }\r\n\r\nexport default FeedbackLists;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC;AACA,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,OAAOC,eAAe,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAE1C,MAAM;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACI,eAAe,CAAC;EAEhD,IAAI,CAACM,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;IACtC,oBAAOL,OAAA;MAAGM,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnD;;EAGA;;EAEA,oBACEX,OAAA,CAACH,eAAe;IAAAU,QAAA,eACdP,OAAA;MAAKM,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BH,QAAQ,CAACQ,GAAG,CAAEC,IAAI,iBACjBb,OAAA,CAACJ,MAAM,CAACkB,GAAG;QAETC,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QACxBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE;QACxBE,IAAI,EAAE;UAAEF,OAAO,EAAE;QAAE,CAAE;QAAAT,QAAA,eAErBP,OAAA,CAACL,YAAY;UAEXkB,IAAI,EAAEA,IAAK;UACXX,YAAY,EAAEA;QAAa,GAFtBW,IAAI,CAACM,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGb;MAAC,GATGE,IAAI,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUF,CACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;;EAGpB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAR,EAAA,CArDMF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAuDnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}